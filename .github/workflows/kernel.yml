name: Build Kernel

on:
  watch:
    types: [started]

  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build Kernel by ${{ github.actor }}
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Build Environment
      run: |
        sudo apt-get update
        sudo apt-get install git ccache automake flex lzop bison gperf build-essential zip curl zlib1g-dev g++-multilib libxml2-utils bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make optipng maven libssl-dev pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl bc libc6-dev-i386 lib32ncurses6 libx11-dev lib32z-dev libgl1-mesa-dev xsltproc unzip device-tree-compiler python3

    - name: Compile Kernel
      run: |
        chmod +x build.sh
        bash build.sh

    - name: Set Properties
      id: props
      run: |
        echo "date=$(TZ=Asia/Manila date +%Y%m%d-%I%M%p)" >> $GITHUB_OUTPUT
        echo "KERNEL_SOURCE=$(cat build | grep -w "KERNEL_SOURCE" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "KERNEL_BRANCH=$(cat build | grep -w "KERNEL_BRANCH" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "KERNEL_DEFCONFIG=$(cat build | grep -w "KERNEL_DEFCONFIG" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "KERNEL=$(cat build | grep -w "KERNEL" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        echo "CLANG_URL=$(cat build | grep -w "CLANG_URL" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV

    - name: Check Out Directory
      run: |
        git clone --depth=1 https://github.com/iambinaytiwari/AnyKernel3 -b master AnyKernel3 && rm -rf AnyKernel3/.git AnyKernel3/.github AnyKernel3/LICENSE AnyKernel3/README.md
        cp /home/runner/work/android-kernel/out/arch/arm64/boot/Image.gz AnyKernel3/Image.gz
        if [ -f /home/runner/work/android-kernel/out/arch/arm64/boot/dts/qcom/sdmmagpie.dtb ]; then
           cp /home/runner/work/android-kernel/out/arch/arm64/boot/dts/qcom/sdmmagpie.dtb AnyKernel3/dtb
        fi
        cd AnyKernel3
        zip -r9 NoNameKernel-2.0-"$(/bin/date -u '+%Y%m%d-%H%M')".zip .

    - name: Release
      uses: ncipollo/release-action@v1.12.0
      with:
        artifacts: |
          AnyKernel3/*.zip
          /home/runner/work/${{ env.KERNEL }}/out/arch/arm64/boot/Image.gz-dtb
          /home/runner/work/${{ env.KERNEL }}/build.log
        name: Compiled Kernel // ${{ steps.props.outputs.date }}
        draft: false
        prerelease: false
        tag: ${{ github.run_id }}-${{ steps.props.outputs.date }}
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          KERNEL: ${{ env.KERNEL_SOURCE }}
          BRANCH: ${{ env.KERNEL_BRANCH }}
          DEFCONFIG: ${{ env.KERNEL_DEFCONFIG }}
          COMPILER: ${{ env.CLANG_URL }}

    - name: Link of Release
      run: |
        echo "Enjoy your Newly Built Kernel"
        echo "https://github.com/${GITHUB_REPOSITORY}/releases/tag/${{ github.run_id }}-${{ steps.props.outputs.date }}"
