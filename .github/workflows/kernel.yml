name: Build Kernel

on:
  watch:
    types: [started]

  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build Kernel by ${{ github.actor }}
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Build Environment
      run: |
        sudo apt-get update
        sudo apt-get install git ccache automake flex lzop bison gperf build-essential zip curl zlib1g-dev g++-multilib libxml2-utils bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make optipng maven libssl-dev pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl bc libc6-dev-i386 lib32ncurses6 libx11-dev lib32z-dev libgl1-mesa-dev xsltproc unzip device-tree-compiler python3

    - name: Compile Kernel
      run: |
        chmod +x build.sh
        bash build.sh

    - name: Set Properties
      id: props
      run: |
        echo "date=$(TZ=Asia/Manila date +%Y%m%d-%I%M%p)" >> $GITHUB_OUTPUT

    - name: Compress Kernel
      run: |
        git clone --depth=1 https://github.com/iambinaytiwari/AnyKernel3 -b vayu AnyKernel3 && rm -rf AnyKernel3/.git AnyKernel3/LICENSE AnyKernel3/README.md
        cp /home/runner/work/android-kernel/out/arch/arm64/boot/Image AnyKernel3/Image
        cp /home/runner/work/android-kernel/out/arch/arm64/boot/dtb.img AnyKernel3/dtb.img
        if [ -f /home/runner/work/android-kernel/out/arch/arm64/boot/dtbo.img ]; then
           cp /home/runner/work/android-kernel/out/arch/arm64/boot/dtbo.img AnyKernel3/dtbo.img
        fi
        cd AnyKernel3
        zip -r9 AIOKernel-"$(/bin/date -u '+%Y%m%d-%H%M')".zip .

    - name: Release
      uses: ncipollo/release-action@v1.12.0
      with:
        artifacts: |
          AnyKernel3/*.zip
          /home/runner/work/android-kernel/build.log
        name: Compiled Kernel // ${{ steps.props.outputs.date }}
        draft: false
        prerelease: false
        tag: ${{ github.run_id }}-${{ steps.props.outputs.date }}
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
         ### Notes
          * Include building logs.
          * Test at your own risk.
          * Use kernel flasher or any custom recoveries to flash the compressed kernel zip file.
